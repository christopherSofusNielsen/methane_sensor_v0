
methane_sensor_v0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000046a  2**0
                  ALLOC, LOAD, DATA
  1 .text         0000010e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000012c  00800100  00800100  0000046a  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  0000046a  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000138  00000000  00000000  000004c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000023c8  00000000  00000000  000005fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000d94  00000000  00000000  000029c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a80  00000000  00000000  00003759  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000328  00000000  00000000  000041dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003d1  00000000  00000000  00004504  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000085c  00000000  00000000  000048d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e8  00000000  00000000  00005131  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  000003f2  000003f2  00000466  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000521c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.__vector_1 00000014  000003d8  000003d8  0000044c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.uart0_hal_init 0000003c  00000322  00000322  00000396  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.uart0_hal_send_message 00000034  0000035e  0000035e  000003d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.__vector_20 0000004a  0000028e  0000028e  00000302  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__vector_18 00000074  0000015c  0000015c  000001d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .bss.rx_buffer_has_message 00000001  00800358  00800358  0000046a  2**0
                  ALLOC
 20 .bss.rx_buffer_data_len 00000001  00800359  00800359  0000046a  2**0
                  ALLOC
 21 .bss.tx_buffer_cursor 00000001  0080035a  0080035a  0000046a  2**0
                  ALLOC
 22 .bss.tx_buffer_data_len 00000001  0080035b  0080035b  0000046a  2**0
                  ALLOC
 23 .text.__vector_30 0000004a  000002d8  000002d8  0000034c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.__vector_28 00000070  000001d0  000001d0  00000244  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .bss.rx_buffer_has_message 00000001  0080035c  0080035c  0000046a  2**0
                  ALLOC
 26 .bss.rx_buffer_data_len 00000001  0080035d  0080035d  0000046a  2**0
                  ALLOC
 27 .bss.rx_buffer 00000064  008002f4  008002f4  0000046a  2**0
                  ALLOC
 28 .bss.tx_buffer_cursor 00000001  0080035e  0080035e  0000046a  2**0
                  ALLOC
 29 .bss.tx_buffer_data_len 00000001  0080035f  0080035f  0000046a  2**0
                  ALLOC
 30 .bss.tx_buffer 000000c8  0080022c  0080022c  0000046a  2**0
                  ALLOC
 31 .text.main    00000006  000003ec  000003ec  00000460  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .progmemx.data 0000004e  0000010e  0000010e  00000182  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 33 .text.test_EEPROM_module_start 0000004e  00000240  00000240  000002b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.libgcc  0000001a  000003be  000003be  00000432  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.avrlibc 0000002c  00000392  00000392  00000406  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5d 00 	jmp	0xba	; 0xba <__ctors_end>
   4:	0c 94 ec 01 	jmp	0x3d8	; 0x3d8 <__vector_1>
   8:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
   c:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  10:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  14:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  18:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  1c:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  20:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  24:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  28:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  2c:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  30:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  34:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  38:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  3c:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  40:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  44:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  48:	0c 94 ae 00 	jmp	0x15c	; 0x15c <__vector_18>
  4c:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  50:	0c 94 47 01 	jmp	0x28e	; 0x28e <__vector_20>
  54:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  58:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  5c:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  60:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  64:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  68:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  6c:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  70:	0c 94 e8 00 	jmp	0x1d0	; 0x1d0 <__vector_28>
  74:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  78:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__vector_30>
  7c:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  80:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  84:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  88:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  8c:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  90:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  94:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  98:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  9c:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  a0:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  a4:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  a8:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  ac:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>
  b0:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__bad_interrupt>

000000b4 <.dinit>:
  b4:	01 00       	.word	0x0001	; ????
  b6:	03 60       	ori	r16, 0x03	; 3
  b8:	80 00       	.word	0x0080	; ????

000000ba <__ctors_end>:
  ba:	11 24       	eor	r1, r1
  bc:	1f be       	out	0x3f, r1	; 63
  be:	cf ef       	ldi	r28, 0xFF	; 255
  c0:	d8 e0       	ldi	r29, 0x08	; 8
  c2:	de bf       	out	0x3e, r29	; 62
  c4:	cd bf       	out	0x3d, r28	; 61

000000c6 <__do_copy_data>:
  c6:	e4 eb       	ldi	r30, 0xB4	; 180
  c8:	f0 e0       	ldi	r31, 0x00	; 0
  ca:	40 e0       	ldi	r20, 0x00	; 0
  cc:	17 c0       	rjmp	.+46     	; 0xfc <__do_clear_bss+0x8>
  ce:	b5 91       	lpm	r27, Z+
  d0:	a5 91       	lpm	r26, Z+
  d2:	35 91       	lpm	r19, Z+
  d4:	25 91       	lpm	r18, Z+
  d6:	05 91       	lpm	r16, Z+
  d8:	07 fd       	sbrc	r16, 7
  da:	0c c0       	rjmp	.+24     	; 0xf4 <__do_clear_bss>
  dc:	95 91       	lpm	r25, Z+
  de:	85 91       	lpm	r24, Z+
  e0:	ef 01       	movw	r28, r30
  e2:	f9 2f       	mov	r31, r25
  e4:	e8 2f       	mov	r30, r24
  e6:	05 90       	lpm	r0, Z+
  e8:	0d 92       	st	X+, r0
  ea:	a2 17       	cp	r26, r18
  ec:	b3 07       	cpc	r27, r19
  ee:	d9 f7       	brne	.-10     	; 0xe6 <__do_copy_data+0x20>
  f0:	fe 01       	movw	r30, r28
  f2:	04 c0       	rjmp	.+8      	; 0xfc <__do_clear_bss+0x8>

000000f4 <__do_clear_bss>:
  f4:	1d 92       	st	X+, r1
  f6:	a2 17       	cp	r26, r18
  f8:	b3 07       	cpc	r27, r19
  fa:	e1 f7       	brne	.-8      	; 0xf4 <__do_clear_bss>
  fc:	e9 3b       	cpi	r30, 0xB9	; 185
  fe:	f4 07       	cpc	r31, r20
 100:	31 f7       	brne	.-52     	; 0xce <__do_copy_data+0x8>
 102:	0e 94 f6 01 	call	0x3ec	; 0x3ec <main>
 106:	0c 94 85 00 	jmp	0x10a	; 0x10a <_exit>

0000010a <_exit>:
 10a:	f8 94       	cli

0000010c <__stop_program>:
 10c:	ff cf       	rjmp	.-2      	; 0x10c <__stop_program>

Disassembly of section .text:

000003f2 <__bad_interrupt>:
 3f2:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.__vector_1:

000003d8 <__vector_1>:
	sleep_cpu();
	sleep_disable();
	clear_bit(EIMSK, 0);
}

ISR(INT0_vect){
 3d8:	1f 92       	push	r1
 3da:	0f 92       	push	r0
 3dc:	0f b6       	in	r0, 0x3f	; 63
 3de:	0f 92       	push	r0
 3e0:	11 24       	eor	r1, r1
	
}
 3e2:	0f 90       	pop	r0
 3e4:	0f be       	out	0x3f, r0	; 63
 3e6:	0f 90       	pop	r0
 3e8:	1f 90       	pop	r1
 3ea:	18 95       	reti

Disassembly of section .text.uart0_hal_init:

00000322 <uart0_hal_init>:
uint8_t rx_buffer_has_message=0;

static void copy_buffer(uint8_t msg[]);

void uart0_hal_init(){
	set_bit(UCSR0B, 4); //Enable Rx
 322:	e1 ec       	ldi	r30, 0xC1	; 193
 324:	f0 e0       	ldi	r31, 0x00	; 0
 326:	80 81       	ld	r24, Z
 328:	80 61       	ori	r24, 0x10	; 16
 32a:	80 83       	st	Z, r24
	set_bit(UCSR0B, 3); //Enable Tx
 32c:	80 81       	ld	r24, Z
 32e:	88 60       	ori	r24, 0x08	; 8
 330:	80 83       	st	Z, r24
	set_bit(UCSR0B, 7); //interrupt Rx complete
 332:	80 81       	ld	r24, Z
 334:	80 68       	ori	r24, 0x80	; 128
 336:	80 83       	st	Z, r24
	set_bit(UCSR0B, 6); //interrupt Tx complete
 338:	80 81       	ld	r24, Z
 33a:	80 64       	ori	r24, 0x40	; 64
 33c:	80 83       	st	Z, r24
	set_bit(UCSR0A, 1); //Set double speed
 33e:	e0 ec       	ldi	r30, 0xC0	; 192
 340:	f0 e0       	ldi	r31, 0x00	; 0
 342:	80 81       	ld	r24, Z
 344:	82 60       	ori	r24, 0x02	; 2
 346:	80 83       	st	Z, r24
	UCSR0C = 0b00000110; //Async, none parity, 1 stop bit, 8 databit
 348:	86 e0       	ldi	r24, 0x06	; 6
 34a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	UBRR0=(8000000/(8*57600))-1; //set baudrate
 34e:	80 e1       	ldi	r24, 0x10	; 16
 350:	90 e0       	ldi	r25, 0x00	; 0
 352:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 356:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	sei();
 35a:	78 94       	sei
 35c:	08 95       	ret

Disassembly of section .text.uart0_hal_send_message:

0000035e <uart0_hal_send_message>:
}


void uart0_hal_send_message(uint8_t msg[], uint8_t length){
 35e:	dc 01       	movw	r26, r24
	for (uint8_t i=0; i<length; i++)
 360:	90 e0       	ldi	r25, 0x00	; 0
 362:	0b c0       	rjmp	.+22     	; 0x37a <uart0_hal_send_message+0x1c>
	{
		tx_buffer[i]=msg[i];
 364:	29 2f       	mov	r18, r25
 366:	30 e0       	ldi	r19, 0x00	; 0
 368:	fd 01       	movw	r30, r26
 36a:	e2 0f       	add	r30, r18
 36c:	f3 1f       	adc	r31, r19
 36e:	40 81       	ld	r20, Z
 370:	f9 01       	movw	r30, r18
 372:	ec 59       	subi	r30, 0x9C	; 156
 374:	fe 4f       	sbci	r31, 0xFE	; 254
 376:	40 83       	st	Z, r20
	sei();
}


void uart0_hal_send_message(uint8_t msg[], uint8_t length){
	for (uint8_t i=0; i<length; i++)
 378:	9f 5f       	subi	r25, 0xFF	; 255
 37a:	96 17       	cp	r25, r22
 37c:	98 f3       	brcs	.-26     	; 0x364 <uart0_hal_send_message+0x6>
	{
		tx_buffer[i]=msg[i];
	}
	
	tx_buffer_data_len=length;
 37e:	60 93 5b 03 	sts	0x035B, r22	; 0x80035b <tx_buffer_data_len>
	tx_buffer_cursor=1;
 382:	81 e0       	ldi	r24, 0x01	; 1
 384:	80 93 5a 03 	sts	0x035A, r24	; 0x80035a <tx_buffer_cursor>
	UDR0=tx_buffer[0];
 388:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <tx_buffer>
 38c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 390:	08 95       	ret

Disassembly of section .text.__vector_20:

0000028e <__vector_20>:
static void copy_buffer(uint8_t msg[]){
	for (uint8_t i=0; i<rx_buffer_data_len-2; i++)
	{
		msg[i]=rx_buffer[i];
	}
}
 28e:	1f 92       	push	r1
 290:	0f 92       	push	r0
 292:	0f b6       	in	r0, 0x3f	; 63
 294:	0f 92       	push	r0
 296:	11 24       	eor	r1, r1
 298:	8f 93       	push	r24
 29a:	ef 93       	push	r30
 29c:	ff 93       	push	r31
 29e:	e0 91 5a 03 	lds	r30, 0x035A	; 0x80035a <tx_buffer_cursor>
 2a2:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <tx_buffer_data_len>
 2a6:	e8 17       	cp	r30, r24
 2a8:	58 f4       	brcc	.+22     	; 0x2c0 <__vector_20+0x32>
 2aa:	81 e0       	ldi	r24, 0x01	; 1
 2ac:	8e 0f       	add	r24, r30
 2ae:	80 93 5a 03 	sts	0x035A, r24	; 0x80035a <tx_buffer_cursor>
 2b2:	f0 e0       	ldi	r31, 0x00	; 0
 2b4:	ec 59       	subi	r30, 0x9C	; 156
 2b6:	fe 4f       	sbci	r31, 0xFE	; 254
 2b8:	80 81       	ld	r24, Z
 2ba:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 2be:	04 c0       	rjmp	.+8      	; 0x2c8 <__vector_20+0x3a>
 2c0:	10 92 5a 03 	sts	0x035A, r1	; 0x80035a <tx_buffer_cursor>
 2c4:	10 92 5b 03 	sts	0x035B, r1	; 0x80035b <tx_buffer_data_len>
 2c8:	ff 91       	pop	r31
 2ca:	ef 91       	pop	r30
 2cc:	8f 91       	pop	r24
 2ce:	0f 90       	pop	r0
 2d0:	0f be       	out	0x3f, r0	; 63
 2d2:	0f 90       	pop	r0
 2d4:	1f 90       	pop	r1
 2d6:	18 95       	reti

Disassembly of section .text.__vector_18:

0000015c <__vector_18>:
 15c:	1f 92       	push	r1
 15e:	0f 92       	push	r0
 160:	0f b6       	in	r0, 0x3f	; 63
 162:	0f 92       	push	r0
 164:	11 24       	eor	r1, r1
 166:	2f 93       	push	r18
 168:	8f 93       	push	r24
 16a:	9f 93       	push	r25
 16c:	ef 93       	push	r30
 16e:	ff 93       	push	r31
 170:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <rx_buffer_has_message>
 174:	81 11       	cpse	r24, r1
 176:	0e c0       	rjmp	.+28     	; 0x194 <__vector_18+0x38>
 178:	e0 91 59 03 	lds	r30, 0x0359	; 0x800359 <rx_buffer_data_len>
 17c:	e4 36       	cpi	r30, 0x64	; 100
 17e:	50 f4       	brcc	.+20     	; 0x194 <__vector_18+0x38>
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	8e 0f       	add	r24, r30
 184:	80 93 59 03 	sts	0x0359, r24	; 0x800359 <rx_buffer_data_len>
 188:	f0 e0       	ldi	r31, 0x00	; 0
 18a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 18e:	e0 50       	subi	r30, 0x00	; 0
 190:	ff 4f       	sbci	r31, 0xFF	; 255
 192:	80 83       	st	Z, r24
 194:	80 91 59 03 	lds	r24, 0x0359	; 0x800359 <rx_buffer_data_len>
 198:	83 30       	cpi	r24, 0x03	; 3
 19a:	80 f0       	brcs	.+32     	; 0x1bc <__vector_18+0x60>
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	fc 01       	movw	r30, r24
 1a0:	e1 50       	subi	r30, 0x01	; 1
 1a2:	ff 4f       	sbci	r31, 0xFF	; 255
 1a4:	20 81       	ld	r18, Z
 1a6:	2a 30       	cpi	r18, 0x0A	; 10
 1a8:	49 f4       	brne	.+18     	; 0x1bc <__vector_18+0x60>
 1aa:	fc 01       	movw	r30, r24
 1ac:	e2 50       	subi	r30, 0x02	; 2
 1ae:	ff 4f       	sbci	r31, 0xFF	; 255
 1b0:	80 81       	ld	r24, Z
 1b2:	8d 30       	cpi	r24, 0x0D	; 13
 1b4:	19 f4       	brne	.+6      	; 0x1bc <__vector_18+0x60>
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <rx_buffer_has_message>
 1bc:	ff 91       	pop	r31
 1be:	ef 91       	pop	r30
 1c0:	9f 91       	pop	r25
 1c2:	8f 91       	pop	r24
 1c4:	2f 91       	pop	r18
 1c6:	0f 90       	pop	r0
 1c8:	0f be       	out	0x3f, r0	; 63
 1ca:	0f 90       	pop	r0
 1cc:	1f 90       	pop	r1
 1ce:	18 95       	reti

Disassembly of section .text.__vector_30:

000002d8 <__vector_30>:


/************************************************************************/
/* Write data complete vect                                             */
/************************************************************************/
ISR(USART1_TX_vect){
 2d8:	1f 92       	push	r1
 2da:	0f 92       	push	r0
 2dc:	0f b6       	in	r0, 0x3f	; 63
 2de:	0f 92       	push	r0
 2e0:	11 24       	eor	r1, r1
 2e2:	8f 93       	push	r24
 2e4:	ef 93       	push	r30
 2e6:	ff 93       	push	r31
	if(tx_buffer_cursor<tx_buffer_data_len){
 2e8:	e0 91 5e 03 	lds	r30, 0x035E	; 0x80035e <tx_buffer_cursor>
 2ec:	80 91 5f 03 	lds	r24, 0x035F	; 0x80035f <tx_buffer_data_len>
 2f0:	e8 17       	cp	r30, r24
 2f2:	58 f4       	brcc	.+22     	; 0x30a <__vector_30+0x32>
		UDR1=tx_buffer[tx_buffer_cursor++];
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	8e 0f       	add	r24, r30
 2f8:	80 93 5e 03 	sts	0x035E, r24	; 0x80035e <tx_buffer_cursor>
 2fc:	f0 e0       	ldi	r31, 0x00	; 0
 2fe:	e4 5d       	subi	r30, 0xD4	; 212
 300:	fd 4f       	sbci	r31, 0xFD	; 253
 302:	80 81       	ld	r24, Z
 304:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f80ce>
 308:	04 c0       	rjmp	.+8      	; 0x312 <__vector_30+0x3a>
		}else{
		tx_buffer_cursor=0;
 30a:	10 92 5e 03 	sts	0x035E, r1	; 0x80035e <tx_buffer_cursor>
		tx_buffer_data_len=0;
 30e:	10 92 5f 03 	sts	0x035F, r1	; 0x80035f <tx_buffer_data_len>
	}
}
 312:	ff 91       	pop	r31
 314:	ef 91       	pop	r30
 316:	8f 91       	pop	r24
 318:	0f 90       	pop	r0
 31a:	0f be       	out	0x3f, r0	; 63
 31c:	0f 90       	pop	r0
 31e:	1f 90       	pop	r1
 320:	18 95       	reti

Disassembly of section .text.__vector_28:

000001d0 <__vector_28>:
	{
		msg[i]=rx_buffer[i];
	}
	uart1_hal_clear_rx_buffer();
	return rx_buffer_data_len-2;
}
 1d0:	1f 92       	push	r1
 1d2:	0f 92       	push	r0
 1d4:	0f b6       	in	r0, 0x3f	; 63
 1d6:	0f 92       	push	r0
 1d8:	11 24       	eor	r1, r1
 1da:	2f 93       	push	r18
 1dc:	8f 93       	push	r24
 1de:	9f 93       	push	r25
 1e0:	ef 93       	push	r30
 1e2:	ff 93       	push	r31
 1e4:	80 91 5c 03 	lds	r24, 0x035C	; 0x80035c <rx_buffer_has_message>
 1e8:	81 11       	cpse	r24, r1
 1ea:	0e c0       	rjmp	.+28     	; 0x208 <__vector_28+0x38>
 1ec:	e0 91 5d 03 	lds	r30, 0x035D	; 0x80035d <rx_buffer_data_len>
 1f0:	e4 36       	cpi	r30, 0x64	; 100
 1f2:	50 f4       	brcc	.+20     	; 0x208 <__vector_28+0x38>
 1f4:	81 e0       	ldi	r24, 0x01	; 1
 1f6:	8e 0f       	add	r24, r30
 1f8:	80 93 5d 03 	sts	0x035D, r24	; 0x80035d <rx_buffer_data_len>
 1fc:	f0 e0       	ldi	r31, 0x00	; 0
 1fe:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f80ce>
 202:	ec 50       	subi	r30, 0x0C	; 12
 204:	fd 4f       	sbci	r31, 0xFD	; 253
 206:	80 83       	st	Z, r24
 208:	80 91 5d 03 	lds	r24, 0x035D	; 0x80035d <rx_buffer_data_len>
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	fc 01       	movw	r30, r24
 210:	ed 50       	subi	r30, 0x0D	; 13
 212:	fd 4f       	sbci	r31, 0xFD	; 253
 214:	20 81       	ld	r18, Z
 216:	2d 30       	cpi	r18, 0x0D	; 13
 218:	49 f4       	brne	.+18     	; 0x22c <__vector_28+0x5c>
 21a:	fc 01       	movw	r30, r24
 21c:	ee 50       	subi	r30, 0x0E	; 14
 21e:	fd 4f       	sbci	r31, 0xFD	; 253
 220:	80 81       	ld	r24, Z
 222:	8a 30       	cpi	r24, 0x0A	; 10
 224:	19 f4       	brne	.+6      	; 0x22c <__vector_28+0x5c>
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	80 93 5c 03 	sts	0x035C, r24	; 0x80035c <rx_buffer_has_message>
 22c:	ff 91       	pop	r31
 22e:	ef 91       	pop	r30
 230:	9f 91       	pop	r25
 232:	8f 91       	pop	r24
 234:	2f 91       	pop	r18
 236:	0f 90       	pop	r0
 238:	0f be       	out	0x3f, r0	; 63
 23a:	0f 90       	pop	r0
 23c:	1f 90       	pop	r1
 23e:	18 95       	reti

Disassembly of section .text.main:

000003ec <main>:
int main(void)
{
	//test_lora_module_start();
	//test_SCD30_module_start();
    //test_PM_HAL_start();
	test_EEPROM_module_start();
 3ec:	0e 94 20 01 	call	0x240	; 0x240 <test_EEPROM_module_start>
 3f0:	ff cf       	rjmp	.-2      	; 0x3f0 <main+0x4>

Disassembly of section .text.test_EEPROM_module_start:

00000240 <test_EEPROM_module_start>:

void clear_lora_parameters();
void set_deveui();
void test_set_get_parameter();

void test_EEPROM_module_start(){
 240:	cf 93       	push	r28
 242:	df 93       	push	r29
 244:	00 d0       	rcall	.+0      	; 0x246 <test_EEPROM_module_start+0x6>
 246:	00 d0       	rcall	.+0      	; 0x248 <test_EEPROM_module_start+0x8>
 248:	00 d0       	rcall	.+0      	; 0x24a <test_EEPROM_module_start+0xa>
 24a:	cd b7       	in	r28, 0x3d	; 61
 24c:	de b7       	in	r29, 0x3e	; 62
	uart0_hal_init();
 24e:	0e 94 91 01 	call	0x322	; 0x322 <uart0_hal_init>
	char msg[]="Init ";
 252:	2e e0       	ldi	r18, 0x0E	; 14
 254:	31 e0       	ldi	r19, 0x01	; 1
 256:	40 e0       	ldi	r20, 0x00	; 0
 258:	86 e0       	ldi	r24, 0x06	; 6
 25a:	f9 01       	movw	r30, r18
 25c:	8e 01       	movw	r16, r28
 25e:	0f 5f       	subi	r16, 0xFF	; 255
 260:	1f 4f       	sbci	r17, 0xFF	; 255
 262:	d8 01       	movw	r26, r16
 264:	74 2f       	mov	r23, r20
 266:	0e 94 df 01 	call	0x3be	; 0x3be <__movmemx_qi>
	uart0_hal_send_message(msg, strlen(msg));
 26a:	b8 01       	movw	r22, r16
 26c:	80 e8       	ldi	r24, 0x80	; 128
 26e:	0e 94 c9 01 	call	0x392	; 0x392 <strlen>
 272:	68 2f       	mov	r22, r24
 274:	c8 01       	movw	r24, r16
 276:	0e 94 af 01 	call	0x35e	; 0x35e <uart0_hal_send_message>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 27a:	2f ef       	ldi	r18, 0xFF	; 255
 27c:	81 e1       	ldi	r24, 0x11	; 17
 27e:	9a e7       	ldi	r25, 0x7A	; 122
 280:	21 50       	subi	r18, 0x01	; 1
 282:	80 40       	sbci	r24, 0x00	; 0
 284:	90 40       	sbci	r25, 0x00	; 0
 286:	e1 f7       	brne	.-8      	; 0x280 <test_EEPROM_module_start+0x40>
 288:	00 c0       	rjmp	.+0      	; 0x28a <test_EEPROM_module_start+0x4a>
 28a:	00 00       	nop
 28c:	f6 cf       	rjmp	.-20     	; 0x27a <test_EEPROM_module_start+0x3a>

Disassembly of section .text.libgcc:

000003be <__movmemx_qi>:
 3be:	99 27       	eor	r25, r25

000003c0 <__movmemx_hi>:
 3c0:	77 fd       	sbrc	r23, 7
 3c2:	05 c0       	rjmp	.+10     	; 0x3ce <__movmemx_hi+0xe>
 3c4:	05 90       	lpm	r0, Z+
 3c6:	0d 92       	st	X+, r0
 3c8:	01 97       	sbiw	r24, 0x01	; 1
 3ca:	e1 f7       	brne	.-8      	; 0x3c4 <__movmemx_hi+0x4>
 3cc:	08 95       	ret
 3ce:	01 90       	ld	r0, Z+
 3d0:	0d 92       	st	X+, r0
 3d2:	01 97       	sbiw	r24, 0x01	; 1
 3d4:	e1 f7       	brne	.-8      	; 0x3ce <__movmemx_hi+0xe>
 3d6:	08 95       	ret

Disassembly of section .text.avrlibc:

00000392 <strlen>:
 392:	cf 92       	push	r12
 394:	df 92       	push	r13
 396:	ef 92       	push	r14
 398:	6b 01       	movw	r12, r22
 39a:	e8 2e       	mov	r14, r24
 39c:	a8 2f       	mov	r26, r24
 39e:	cb 01       	movw	r24, r22
 3a0:	fc 01       	movw	r30, r24
 3a2:	24 91       	lpm	r18, Z
 3a4:	a7 fd       	sbrc	r26, 7
 3a6:	20 81       	ld	r18, Z
 3a8:	22 23       	and	r18, r18
 3aa:	19 f0       	breq	.+6      	; 0x3b2 <strlen+0x20>
 3ac:	01 96       	adiw	r24, 0x01	; 1
 3ae:	a1 1d       	adc	r26, r1
 3b0:	f7 cf       	rjmp	.-18     	; 0x3a0 <strlen+0xe>
 3b2:	8c 19       	sub	r24, r12
 3b4:	9d 09       	sbc	r25, r13
 3b6:	ef 90       	pop	r14
 3b8:	df 90       	pop	r13
 3ba:	cf 90       	pop	r12
 3bc:	08 95       	ret
